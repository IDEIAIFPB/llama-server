services:
  llama-server-swap:
    container_name: llama-server-swap
    image: ghcr.io/mostlygeek/llama-swap:cuda
    build: .
    restart: unless-stopped
    ports:
      - "8080:8080"

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - VIRTUAL_HOST=${HOST_URL}

    volumes:
      - models-data:/models
      - ./scripts/docker-entrypoint.sh:/docker-entrypoint.sh:ro
      - ${CONFIG_FILE:-./config/simple.yaml}:/app/config.yaml:ro

    entrypoint: ["/bin/bash", "-c", "/docker-entrypoint.sh"]

    labels:
      - "com.github.nginxproxy.docker-nginx-proxy=true"
      - "com.github.nginxproxy.nginx-proxy.alias=${HOST_URL}"
      - "com.github.nginxproxy.nginx-proxy.port=8080"
    networks:
      - llama-server-swap-network
    depends_on:
      - nginx-proxy

  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: llama-server-nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    environment:
      - DEFAULT_HOST=${HOST_URL}
    networks:
      - llama-server-swap-network

volumes:
  models-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./models

networks:
  llama-server-swap-network:
    driver: bridge
